---
http_interactions:
- request:
    method: get
    uri: https://maps.googleapis.com/maps/api/place/details/json?key=<GOOGLE_PLACES_API_KEY>&place_id=ChIJP3JjmdR4bIcRQyfKKJGRt7s
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v0.15.4
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Date:
      - Sat, 03 Aug 2019 19:15:40 GMT
      Expires:
      - Sat, 03 Aug 2019 19:20:40 GMT
      Cache-Control:
      - public, max-age=300
      Vary:
      - Accept-Language
      Server:
      - scaffolding on HTTPServer2
      Content-Length:
      - '4021'
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      Server-Timing:
      - gfet4t7; dur=127
      Alt-Svc:
      - quic=":443"; ma=2592000; v="46,43,39"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sat, 03 Aug 2019 19:15:40 GMT
recorded_with: VCR 5.0.0
