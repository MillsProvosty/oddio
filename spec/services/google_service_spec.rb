require "rails_helper"

RSpec.describe GoogleService do
  let(:service) { GoogleService.new }
  let(:landmarks) { TomTomService.category_search(categorySet: 7367).map {|landmark| landmark[:poi][:name]} }
  let(:expected) { ["ChIJMT6TsdR4bIcR3WqJ91M7Kec", "ChIJvSwKotR4bIcRZbh-oehYci0"] }

  it 'exist' do
    expect(service).to be_a GoogleService
  end

  it "#get_place_id returns an array of place_id for landmarks generated by TomTomService" do
    VCR.use_cassette('google_service_get_place_id_instance_method') do
      results = landmarks.map do |landmark|
        service.get_place_id(landmark)
      end

      expect(results.class).to eq(Array)
      expect(results.first).to eq(expected[0])
      expect(results.second).to eq(expected[1])
    end
  end

  it "::get_place_id returns an array of place_id for landmarks generated by TomTomService" do
    VCR.use_cassette('google_service_get_place_id_class_method') do
      results = landmarks.map do |landmark|
        GoogleService.get_place_id(landmark)
      end

      expect(results.class).to eq(Array)
      expect(results.first).to eq(expected[0])
      expect(results.second).to eq(expected[1])
    end
  end

  it "#get_details(id) returns landmark's details when given a place_id" do
    VCR.use_cassette('google_service_get_details_instance_method') do
      result = service.get_details(expected[0])

      expect(result).to have_key(:formatted_address)
      expect(result).to have_key(:formatted_phone_number)
      expect(result).to have_key(:geometry)
      expect(result).to have_key(:name)
      expect(result).to have_key(:photos)
      expect(result).to have_key(:website)
      expect(result[:place_id]).to eq(expected[0])
    end
  end

  it "::get_details(id) returns landmark's details when given a place_id" do
    VCR.use_cassette('google_service_get_details_class_method') do
      result = GoogleService.get_details(expected[0])

      expect(result).to have_key(:formatted_address)
      expect(result).to have_key(:formatted_phone_number)
      expect(result).to have_key(:geometry)
      expect(result).to have_key(:name)
      expect(result).to have_key(:photos)
      expect(result).to have_key(:website)
      expect(result[:place_id]).to eq(expected[0])
    end
  end

  it "#get_picture(photo_reference) returns landmark's picture when given a photo reference" do
    VCR.use_cassette('google_service_get_picture') do
      expected = "https://lh3.googleusercontent.com/p/AF1QipN1BHEE8SUqT85_qx3bjCIx4A2_92ND2eOqY8Oj=s1600-w800-h800"
      result = service.get_picture('CmRaAAAAh3TTyv0vzjZK0qEPpt2xfhu6io4RbhO89xLi2cHuj2coXNI_WyHqWI5Fsexwru9pEYVzLIEk2CYI3QFTxQPLM9kVa0T4fWnFRLuM5x84UnMBGq7wh4PSqCYqyg-rpC7bEhC3IgCuLlxpwn39FrLUM29LGhQS2dGxHj9KLeP_kGglXr5WFCBA7Q')

      expect(result).to eq(expected)
    end
  end
end
